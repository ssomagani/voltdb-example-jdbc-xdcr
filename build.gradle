plugins {
    id 'java'
    id 'application'
    id 'eclipse'
}

defaultTasks 'runApp'

repositories {
 	mavenCentral()
 	mavenLocal()
}

dependencies {
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'commons-net:commons-net:3.3'
    compile group: 'org.voltdb', name: 'voltdb', version: '9.0'
    compile group: 'org.voltdb', name: 'voltdbclient', version: '9.0'
	compile 'org.apache.commons:commons-lang3:3.0'
	
	testCompile('org.junit.jupiter:junit-jupiter-api:5.3.1')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.3.1')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')
	testCompile ('org.junit.platform:junit-platform-launcher:1.3.1')
}

test {
	useJUnitPlatform()
}

sourceSets {
	db {
		java {srcDir 'src/db/java'}
	}
}

task compileDB : compileDbJava {
	classpath += sourceSets.main.runtimeClasspath
}

task clientJar(type: Jar) {
		baseName = 'client'
		from(sourceSets.main.output)
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

task dbJar(type: Jar) {
	from(sourceSets.db.output)
	baseName = 'procs'
}

task jarAll()
jarAll.dependsOn clientJar
jarAll.dependsOn dbJar

task runApp(type: JavaExec) {
	classpath = classpath = sourceSets.main.runtimeClasspath
	main = 'com.example.Application'
	args = ['localhost', 0, 10000, 100, 60000, 0, 4, 'test-run'] 
}

runApp.dependsOn jarAll